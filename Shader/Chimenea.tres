[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://daxecajh4ywcs"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_8pcvg"]
parameter_name = "Noise_Textura"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_wd8i6"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_lxfxu"]
parameter_name = "Smoke_texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_dulda"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_g6bp8"]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Noise_Textura;
uniform sampler2D Smoke_texture;



void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Noise_Textura, UV);
	float n_out3p4 = n_out3p0.a;


	vec4 n_out5p0;
// Texture2D:5
	n_out5p0 = texture(Smoke_texture, UV);
	float n_out5p4 = n_out5p0.a;


	vec3 n_out6p0;
// If:6
	float n_in6p0 = 0.00000;
	float n_in6p2 = 0.00001;
	vec3 n_in6p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_in6p0 - n_out5p4) < n_in6p2)
	{
		n_out6p0 = n_in6p3;
	}
	else if(n_in6p0 < n_out5p4)
	{
		n_out6p0 = vec3(n_out3p4);
	}
	else
	{
		n_out6p0 = vec3(n_out3p4);
	}


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);
	COLOR.a = n_out6p0.x;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1100, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_8pcvg")
nodes/fragment/2/position = Vector2(-420, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_wd8i6")
nodes/fragment/3/position = Vector2(60, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture2DParameter_lxfxu")
nodes/fragment/4/position = Vector2(-420, 380)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture_dulda")
nodes/fragment/5/position = Vector2(60, 420)
nodes/fragment/6/node = SubResource("VisualShaderNodeIf_g6bp8")
nodes/fragment/6/position = Vector2(620, 280)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 5, 4, 6, 1, 3, 4, 6, 5, 3, 4, 6, 4, 6, 0, 0, 1, 3, 0, 0, 0, 4, 0, 5, 2)
